var scr=document.getElementsByTagName('script');
var zoombox_path = scr[scr.length-1].getAttribute("src").replace('zoombox.js','');

(function($){

var options = {
	theme       : 'zoombox',	//available themes : zoombox,lightbox, prettyphoto, darkprettyphoto, simple
	opacity     : 0.8,			// Black overlay opacity
	duration    : 800,			// Animation duration
	animation   : true,			// Do we have to animate the box ?
	width       : 600,			// Default width
	height      : 400,			// Default height
	gallery     : true,			// Allow gallery thumb view
	autoplay	: false,		// Autoplay for video
	overflow	: false			// Allow images bigger than screen ?
}
var images;         // Gallery Array [gallery name][link]
var elem;           // HTML element currently used to display box
var isOpen = false; // Zoombox already opened ?
var width, height;	// size of .zoombox_container
var padWidth = 30, padHeight = 10;
var timer;          // Timing for img loading
var i = 0;          // iteration variable
var type = 'multimedia'; // Content type
var imgWidth, imgHeight;
var position = false;
var imageset = false;
var state = 'closed';

/**
* You can edit the html code generated by zoombox for specific reasons.
* */
var html = '\
	<div id="zoombox">\
		<div class="zoombox_mask"></div>\
		<div class="zoombox_container">\
			<div class="zoombox_content">\
				&nbsp;\
			</div>\
			<div class="zoombox_title"></div>\
			<div class="zoombox_next"></div>\
			<div class="zoombox_prev"></div>\
			<div class="zoombox_close"></div>\
		</div>\
		<div class="zoombox_gallery"></div>\
	</div>';
// Regular expressions needed for the content
var filtreImg			= /(\.jpg)|(\.jpeg)|(\.bmp)|(\.gif)|(\.png)/i;
var filtreMP3			= /(\.mp3)/i;
var filtreFLV			= /(\.flv)/i;
var filtreSWF			= /(\.swf)/i;
var filtreQuicktime		= /(\.mov)|(\.mp4)/i;
var filtreWMV			= /(\.wmv)|(\.avi)/i;
var filtreDailymotion	= /(http:\/\/www.dailymotion)|(http:\/\/dailymotion)/i;
var filtreVimeo			= /(http:\/\/www.vimeo)|(http:\/\/vimeo)/i;
var filtreYoutube		= /(youtube\.)/i;
var filtreKoreus		= /(http:\/\/www\.koreus)|(http:\/\/koreus)/i;

var galleryLoaded = 0;

$.zoombox = function(el,options) {

}
$.zoombox.options = options;
$.zoombox.close = function() {
	close();
}
$.zoombox.open = function(tmplink, opts){
	elem = null;
	options = $.extend({},$.zoombox.options,opts);
	load(tmpLink);
}
$.zoombox.html = function(cont,opts){
	options = $.extend({},$.zoombox.options,opts);
	width = options.width;
	height = options.height;
	elem = null;
	open(cont);
}
$.fn.zoombox = function(opts){

	images = new Array(); // allow multiple call on one page, for content loaded from ajax

	/**
	 * Bind the behaviour on every Elements
	 */
	return this.each(function(){
		// No zoombox for IE6
		if($.browser && $.browser.msie && $.browser.version < 7 && !window.XMLHttpRequest){
			return false;
		}
		var obj = this;
		var galleryRegExp = /zbuildGallery([0-9]+)/;
		var skipRegExp = /zskip/;
		// var gallery = galleryRegExp.exec($(this).attr("class"));
		var gallery = ['foo', '0'];
		var skip = skipRegExp.exec($(this).attr("class"));
		var tmpimageset = false;
		if(gallery != null){
			if(!images[gallery[1]]){
				images[gallery[1]]=new Array();
			}
			if (skip == null) {
				images[gallery[1]].push($(this));
			}
			var pos = images[gallery[1]].length-1;
			tmpimageset = images[gallery[1]];
		}
		$(this).unbind('click').click(function(){
			options = $.extend({},$.zoombox.options,opts);
			if(state!='closed') return false;
			if (skip != null) {
				if (pos < images[gallery[1]].length-1) {
					elem = images[gallery[1]][pos+1];
				}
			} else {
				elem = $(obj);
			}
			imageset = tmpimageset;
			position = pos;
			load(getLink(elem));
			return false;
		});
	});
}

/**
 * Build the HTML Structure of the box
 * */
function build(){
	// We add the HTML Code on our page
	$('body').append(html);
	$(window).keydown(shortcut);
	$(window).resize(function(){
		resize(true);
	});
	$('#zoombox .zoombox_mask').hide();
	// We add a specific class to define the box theme
	$('#zoombox').addClass(options.theme);
	// We bind the close behaviour (click on the mask / click on the close button)
	$('#zoombox .zoombox_mask,.zoombox_close').click(function(){
		close();
		return false;
	});
	// Next/Prev button
	if(imageset == false){
		$('#zoombox .zoombox_next,#zoombox .zoombox_prev').remove();
	}else{
		$('#zoombox .zoombox_next').click(function(){
			next();
		});
		$('#zoombox .zoombox_prev').click(function(){
			prev();
		});
	}
	padWidth = $('#zoombox .zoombox_container').outerWidth() - $('#zoombox .zoombox_content').outerWidth();
	padHeight = $('#zoombox .zoombox_container').outerHeight() - $('#zoombox .zoombox_content').outerHeight();
}

function changeSlide(e, css) {
	if($('#zoombox .zoombox_gallery img').length > 0){
		$('#zoombox .zoombox_gallery img').removeClass('current');
		$('#zoombox .zoombox_gallery img:eq('+position+')').addClass('current');
		var	width1 = $('#zoombox .zoombox_gallery div').width(),
			width2 = $('#zoombox .zoombox_gallery').width();
		if( width1 > width2){
			var center = parseInt(width2 / 2);
			var left = $('#zoombox .zoombox_gallery img.current').data('left');
			if (left > center) {
				 // 2 negative values
				var min = width2 - width1;
				var offset = center - left;
				$('#zoombox .zoombox_gallery div').animate({left: Math.max(min, offset)}, options.duration);
			} else {
				if ($('#zoombox .zoombox_gallery div').offset().left < 0) {
					// reset
					$('#zoombox .zoombox_gallery div').animate({left: 0}, options.duration);
				}
			}
		}
	}
}

function getLink(element) {
	var result = null;
	if (element.attr('href') !== undefined)
		result = element.attr('href');
	else {
		if (element.attr('src') !== undefined)
			result = element.attr('src');
	}
	return result;
}

/**
*   Gallery System (with slider if too much images)
*/
function buildGallery(){
	if(options.gallery){

		if(imageset === false){
			$('#zoombox .zoombox_gallery').remove();
			return false;
		}

		var	loaded = 0,
			width = 0,
			contentWidth = 0;
		for(var i in imageset){
			var imgSrc = zoombox_path+'img/video.png';
			var img = $('<img src="'+imgSrc+'" class="video gallery'+(i*1)+'"/>');
			var href = options.href(imageset[i]);
			if(filtreImg.test(href)){
			   imgSrc = href;
			   img = $('<img src="'+imgSrc+'" class="gallery'+(i*1)+'"/>');
			}
			img.data('id',i).appendTo('#zoombox .zoombox_gallery')
			img.click(function(){
			   gotoSlide($(this).data('id'));
			   $('#zoombox .zoombox_gallery img').removeClass('current');
			   $(this).addClass('current');
			});
			if(i==position){ img.addClass('current'); }

			// Listen the loading of Images
			$("<img/>").data('img',img).attr("src", imgSrc).load(function() {
					loaded++;
					var img = $(this).data('img');
					img.width(Math.round(img.height() * this.width/this.height));
					if(loaded == $('#zoombox .zoombox_gallery img').length){
						var width = 0;
						$('#zoombox .zoombox_gallery img').each(function(){
							width += $(this).outerWidth();
							$(this).data('left',width);
						});
						var div = $('<div>').css({
							position:'absolute',
							top:0,
							left:0,
							width: width
						});
						$('#zoombox .zoombox_gallery').wrapInner(div);
						contentWidth = $('#zoombox .zoombox_gallery').width();
						$('#zoombox').trigger('change');
					}
				});
		}
		$('#zoombox .zoombox_gallery').show().animate({bottom:0},options.duration);
	}

	$('#zoombox').bind('change', changeSlide);

}

/**
 * Open the box
 **/
function open(content){
	if (isOpen === false) {
		build();
	}
	$('#zoombox .close').hide();
	$('#zoombox .zoombox_container').removeClass('multimedia').removeClass('img').addClass(type);

	// And after... Animation or not depending of preferences
	// We empty the content
	$('#zoombox .zoombox_content').empty();

	// If it's an image we load the content now (to get a good animation)
	if(type=='img' && options.animation == true){
		$('#zoombox .zoombox_container').css({backgroundColor: 'transparent', opacity: '0.2'});
		resize();
		if (options.animation == true) {
			$('#zoombox .zoombox_content').append(content);
		}
		$('#zoombox').trigger('change',css);
	}

	if (isOpen === false) {

		// Default position/size of the box to make the "zoom effect"
		if(elem != null && elem.find('img').length != 0){
			var min = elem.find('img');
			$('#zoombox .zoombox_container').css({
				width	: min.width(),
				height	: min.height(),
				top		: min.offset().top,
				left	: min.offset().left,
				opacity	: 0,
				marginTop : min.css('marginTop')
			});
		}else if(elem != null){
			$('#zoombox .zoombox_container').css({
			   width	: elem.width(),
			   height	: elem.height(),
			   top		: elem.offset().top,
			   left		: elem.offset().left
			});
		}else {
			$('#zoombox .zoombox_container').css({
				width	: 100,
				height	: 100,
				top		: windowH()/2-50,
				left	: windowW()/2-50
			});
		}
	} else {
		$('#zoombox .zoombox_title').empty();
	}

	// Final position/size of the box after the animation
	var galleryH = (options.gallery) ? $('#zoombox .zoombox_gallery').outerHeight() : 0;
	var css = {
		width	: width,
		height	: height,
		left	: (windowW() - width) / 2,
		top		: (windowH() - height - galleryH) / 2,
		marginTop : scrollY(),
		opacity	: 1
	};

	// Trigger the change event
	//

	// Do we animate or not ?
	if(options.animation == true){
		$('#zoombox .zoombox_title').hide();
		$('#zoombox .zoombox_close').hide();
		$('#zoombox .zoombox_container').animate(css, options.duration, function(){
			if(type == 'img'){
				// $('#zoombox .zoombox_content img').css('opacity',0).fadeTo(300,1);
				$('#zoombox .zoombox_container').css({backgroundColor: ''});
				if(!isOpen){
					buildGallery();
				}
			} else {
				$('#zoombox .zoombox_content').append(content);
			}
			// We add a title if we find one on the link
			if(elem != null && elem.attr('title')){
				$('#zoombox .zoombox_title').append(elem.attr('title'));
			}
			$('#zoombox .zoombox_title').fadeIn(300);
			$('#zoombox .zoombox_close').fadeIn(300);
			state = 'opened';
			isOpen = true;
		});
		$('#zoombox .zoombox_mask').fadeTo(200,options.opacity);
	}else{
		if (type == 'img') {
			if(!isOpen){
				buildGallery();
			}
		} else {
			$('#zoombox .zoombox_content').append(content);
		}
		// We add a title if we find one on the link
		if (elem != null && elem.attr('title')) {
			$('#zoombox .zoombox_title').append(elem.attr('title'));
		}
		$('#zoombox .zoombox_close').show();
		$('#zoombox .zoombox_gallery').show();
		$('#zoombox .zoombox_container').css(css);
		$('#zoombox .zoombox_mask').show();
		$('#zoombox .zoombox_mask').css('opacity',options.opacity);
		isOpen = true;
		state = 'opened';
	}
}
/**
 * Close the box
 * **/
function close(){
	state = 'closing';
	window.clearInterval(timer);
	$(window).unbind('keydown');
	$(window).unbind('resize');
	if(type == 'multimedia'){
		$('#zoombox .zoombox_container').empty();
	}
	var css = {};
	if(elem != null && elem.find('img').length > 0){
		var min = elem.find('img');
		css ={
			width : min.width(),
			height: min.height(),
			top : min.offset().top,
			left : min.offset().left,
			opacity:0,
			marginTop : min.css('marginTop')
		};
	}else if(elem!=null){
		css = {
		   width:   elem.width(),
		   height:  elem.height(),
		   top:elem.offset().top,
		   left:elem.offset().left,
		   marginTop:0,
		   opacity:0
		};
	}else{
		css = {
			width: 100,
			height: 100,
			top:windowH()/2-50,
			left:windowW()/2-50,
			opacity : 0
		};
	}
	if(options.animation == true){
		$('#zoombox .zoombox_mask').fadeOut(200);
		$('#zoombox .zoombox_gallery').animate({bottom:-$('#zoombox .zoombox_gallery').innerHeight()},options.duration);
		$('#zoombox .zoombox_container').animate(css,options.duration,function(){
			$('#zoombox').remove();
			state = 'closed';
			isOpen = false;
		});
	}else{
		$('#zoombox').remove();
		state = 'closed';
		isOpen = false;
	}
}

/**
 * Set the HTML Content of the box
 * */
function setContent(link){
	var content;
	var url = link;
	type = 'multimedia';
	if(filtreImg.test(url)){
		type = 'img';
		content='<img src="'+link+'" width="100%" height="100%"/>';
	}else if(filtreMP3.test(url)){
		width=300;
		height=40;
		content ='<object type="application/x-shockwave-flash" data="'+MP3Player+'?son='+url+'" width="'+width+'" height="'+height+'">';
		content+='<param name="movie" value="'+MP3Player+'?son='+url+'" /></object>';
	}else if(filtreFLV.test(url)){
		var autostart = 0;
		if(options.autoplay==true){ autostart = 1; }
		content='\
<object type="application/x-shockwave-flash" data="'+zoombox_path+'FLVplayer.swf" width="'+width+'" height="'+height+'">\
	<param name="allowFullScreen" value="true">\
	<param name="scale" value="noscale">\
	<param name="wmode" value="transparent">\
	<param name="flashvars" value="flv='+url+'&autoplay='+autostart+'">\
	<embed src="'+zoombox_path+'FLVplayer.swf" width="'+width+'" height="'+height+'" allowscriptaccess="always" allowfullscreen="true" flashvars="flv='+url+'" wmode="transparent" />\
</object>';
	}else if(filtreSWF.test(url)){
		content='<object width="'+width+'" height="'+height+'"><param name="allowfullscreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="movie" value="'+url+'" /><embed src="'+url+'" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="'+width+'" height="'+height+'" wmode="transparent"></embed></object>';
	}else if(filtreQuicktime.test(url)){
		content='<embed src="'+url+'" width="'+width+'" height="'+height+'" controller="true" cache="true" autoplay="true"/>';
		// HTML5 Code
		//content='<video controls src="'+url+'" width="'+width+'" height="'+height+'">Your browser does not support this format</video>'
	}else if(filtreWMV.test(url)){
		content='<embed src="'+url+'" width="'+width+'" height="'+height+'" controller="true" cache="true" autoplay="true" wmode="transparent" />';
	}else if(filtreDailymotion.test(url)){
		var id=url.split('_');
		id=id[0].split('/');
		id=id[id.length-1]+'?';
		if(options.autoplay==true){
			id = id + 'autoPlay=1&';
		}
		content='<iframe frameborder="0" width="'+width+'" height="'+height+'" src="http://www.dailymotion.com/embed/video/'+id+'?wmode=transparent"></iframe>';
	}else if(filtreVimeo.test(url)){
		var id=url.split('/');
		id=id[3]+'?';
		if(options.autoplay==true){
			id = id + 'autoplay=1&';
		}
		content='<iframe src="http://player.vimeo.com/video/'+id+'title=0&amp;byline=0&amp;portrait=0&amp;wmode=transparent" width="'+width+'" height="'+height+'" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'
	}else if(filtreYoutube.test(url)){
		var id=url.split('watch?v=');
		id=id[1].split('&');
		id=id[0]+'?';
		if(options.autoplay==true){
			id = id + 'autoplay=1&';
		}
		content='<iframe width="'+width+'" height="'+height+'" src="http://www.youtube.com/embed/'+id+'wmode=Opaque" frameborder="0" allowfullscreen></iframe>';
	}else if(filtreKoreus.test(url)){
		url=url.split('.html');
		url=url[0];
		content='<object type="application/x-shockwave-flash" data="'+url+'" width="'+width+'" height="'+height+'"><param name="movie" value="'+url+'"><embed src="'+url+'" type="application/x-shockwave-flash" width="'+width+'" height="'+height+'"  wmode="transparent"></embed></object>';
	}else{
		content='<iframe src="'+url+'" width="'+width+'" height="'+height+'" border="0"></iframe>';
	}
	return content;
}
/**
 *  Handle Image loading
 **/
function loadImg(img){
	if(img.complete){
		window.clearInterval(timer);
		$('#zoombox_loader').remove();
		imgWidth = img.width;
		imgHeight = img.height;
		var result = setContent(img.src);
		open(result);
	} else {
		// On anime le loader
		if ($('#zoombox_loader').length == 0) {
			$("body").append('<div id="zoombox_loader"></div>');
			$("#zoombox_loader").css("marginTop",scrollY());
		}
		if ( i>=0 )
			{ i = -1056; }
		else {
			i += 96;
		}
		$('#zoombox_loader').css({backgroundPosition: i+'px 0'});
	}
}

/**
 * Load the content (with or without loader) and call open()
 * */
function load(link){
	if (state=='closed') isOpen = false;
	state = 'load';
	setDim();
	if (filtreImg.test(link)) {
		var src = link;
		var regEx1 = /\.tb(\.(?:jpg|jpeg|png|gif))$/i;
		var regEx2 = /(staticflickr\.com\/.+)\w(\.(?:jpg|jpeg|png|gif))$/i;
		if (regEx1.test(link)) {
			src = link.replace(regEx1, '$1');
		} else {
			if (regEx2.test(link)) {
				// change b for other sizes image. Look at flickr.com
				src = link.replace(regEx2, '$1b$2');
			}
		}
		img=new Image();
		img.src = src;
		timer = window.setInterval(function(){loadImg(img);}, 150);
	} else {
		var result = setContent(link);
		open(result);
	}
}

function gotoSlide(i){
	if(state != 'opened'){ return false; }
	if (imageset) {
		position = i;
		elem = imageset[i];
		link = getLink(elem);
		load(link);
	}
	return false;
}

function next(){
	var i = position;
	if (i < imageset.length-1) {
		i += 1;
	} else {
		i = 0;
	}
	gotoSlide(i);
}

function prev(){
	var i = position;
	if (i > 0) {
		i -= 1;
	} else {
		i = imageset.length-1;
	}
	gotoSlide(i);
}

/**
 * GENERAL FUNCTIONS
 * */
/**
 * Resize
 **/
function resize(repaint){
	if (type == 'img') {
		w = imgWidth;
		h = imgHeight;
		var ratio = w / h;
		var galleryHeight =  (options.gallery) ? $('#zoombox .zoombox_gallery').outerHeight() : 0;
		var max = windowH() - padHeight - galleryHeight - 4;
		if (h > max) {
			h = max;
			w = Math.round(h * ratio);
		}
		max = windowW() - padWidth - 4
		if (w > max) {
			w = max;
			h = Math.round(w / ratio);
		}
		height = h + padHeight;
		width = w + padWidth;
	} else {
		var a=1;
	}
 	if (type != 'img' || repaint === true) {
		var css = {
			width: width,
			height: height,
			left	: (windowW() - width) / 2,
			top		: (windowH() - height - galleryHeight) / 2
		}
		$('#zoombox .zoombox_container').css(css);
/*	} else {
		$('#zoombox .zoombox_container').css({height: height});
* */
	}
}
/**
 * Keyboard Shortcut
 **/
var allowedKeys = [39, 32, 37, 36, 35, 27];

function shortcut(event){
	for (i=0, iMax=allowedKeys.length; i<iMax; i++) {
		if (event.keyCode == allowedKeys[i]) {
			event.preventDefault();
			switch (event.keyCode) {
				case 39 :
				case 32 :
					next();
					break;
				case 37 :
					prev();
					break;
				case 27 :
					close();
					break;
				case 36 :
					gotoSlide(0);
					break;
				case 35 :
					gotoSlide(imageset.length-1);
			}
			break;
		}
	}
}
/**
 * Parse Width/Height of a link and insert it in the width and height variables
 * */
function setDim(){
	width = options.width;
	height = options.height;
	if(elem!=null){
		var widthReg = /w([0-9]+)/;
		var w = widthReg.exec(elem.attr("class"));
		if(w != null){
			if(w[1]){
				width = w[1];
			}
		}
		var heightReg = /h([0-9]+)/;
		var h = heightReg.exec(elem.attr("class"));
		if(h != null){
			if(h[1]){
				height = h[1];
			}
		}
	}
	return false;
}
/**
* Return the window height
* */
function windowH(){
	return $(window).height();
}

/**
 * Return the window width
 * */
function windowW(){
	return $(window).width();
}

/**
 *  Return the position of the top
 *  */
function scrollY() {
		scrOfY = 0;
		if( typeof( window.pageYOffset ) == 'number' ) {
				//Netscape compliant
				scrOfY = window.pageYOffset;
		} else if( document.body && ( document.body.scrollTop ) ) {
				//DOM compliant
				scrOfY = document.body.scrollTop;
		} else if( document.documentElement && ( document.documentElement.scrollTop ) ) {
				//IE6 standards compliant mode
				scrOfY = document.documentElement.scrollTop;
		}
		return scrOfY;
}

/**
 *  Return the position of the left scroll
 *  */
function scrollX(){
		scrOfX = 0;
		if( typeof( window.pageXOffset ) == 'number' ) {
				//Netscape compliant
				scrOfX = window.pageXOffset;
		} else if( document.body && ( document.body.scrollLeft ) ) {
				//DOM compliant
				scrOfX = document.body.scrollLeft;
		} else if( document.documentElement && ( document.documentElement.scrollLeft ) ) {
				//IE6 standards compliant mode
				scrOfX = document.documentElement.scrollLeft;
		}
		 return scrOfX;
}

})(jQuery);
